<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2020 - Felipe Desiderati
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
  ~ associated documentation files (the "Software"), to deal in the Software without restriction,
  ~ including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
  ~ and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so,
  ~ subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice shall be included in all copies or substantial
  ~ portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
  ~ LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
  ~ IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
  ~ WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
  ~ SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.6.RELEASE</version>
        <relativePath/>
    </parent>
    <groupId>io.herd.common</groupId>
    <artifactId>common-parent-info</artifactId>
    <version>${revision}</version>
    <packaging>pom</packaging>

    <organization>
        <name>Felipe Desiderati</name>
        <url>${github.server-url}</url>
    </organization>

    <licenses>
        <license>
            <name>MIT License</name>
            <url>http://www.opensource.org/licenses/mit-license.php</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Felipe Desiderati</name>
            <email>felipedesiderati@gmail.com</email>
            <organization>Felipe Desiderati</organization>
            <organizationUrl>${github.server-url}</organizationUrl>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:git://github.com/desiderati/commons.git</connection>
        <developerConnection>scm:git:ssh://github.com:desiderati/commons.git</developerConnection>
        <url>http://github.com/desiderati/commons/tree/master</url>
    </scm>

    <issueManagement>
        <system>GitHub Issues</system>
        <url>https://github.com/desiderati/commons/issues</url>
    </issueManagement>

    <distributionManagement>
        <repository>
            <id>github</id>
            <name>GitHub Commons Herd.io Apache Maven Packages</name>
            <url>https://maven.pkg.github.com/desiderati/commons</url>
        </repository>
    </distributionManagement>

    <properties>
        <revision>2.3.19</revision>

        <!-- Major versions. -->
        <commons-herd.io.version>${revision}</commons-herd.io.version>
        <spring-boot.version>2.2.6.RELEASE</spring-boot.version>

        <!-- Basic configuration. -->
        <maven.build.timestamp.format>yyyyMMddHHmm</maven.build.timestamp.format>
        <maven.version>3.6.0</maven.version>
        <java.version>11</java.version>

        <!--
            There is no need to use Javadoc in our projects.
            Anyway there is a bug when used together with jgitflow-maven-plugin.
        -->
        <maven.javadoc.skip>true</maven.javadoc.skip>

        <!-- GitHub -->
        <github.server-url>https://github.com/desiderati</github.server-url>

        <!--
            Can be defined by children POMs. The name of the main class.
            If not specified, the first compiled class found that contains
            a 'main' method will be used.
        -->
        <start-class />
    </properties>

    <repositories>
        <repository>
            <id>jfrog-snapshots</id>
            <name>jfrog-snapshots</name>
            <url>http://oss.jfrog.org/oss-snapshot-local</url>
        </repository>
    </repositories>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <forceJavacCompilerUse>true</forceJavacCompilerUse>
                        <parameters>true</parameters>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-scm-plugin</artifactId>
                    <version>1.11.2</version>
                    <configuration>
                        <tag>version/${project.version}</tag>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>3.0.0-M1</version>
                    <configuration>
                        <useReleaseProfile>false</useReleaseProfile>
                        <tagNameFormat>version/@{project.version}</tagNameFormat>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>3.0.0-M1</version>
                    <configuration>
                        <retryFailedDeploymentCount>7</retryFailedDeploymentCount>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>2.7</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <!--
                Install the sources along with your artifact.
            -->
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--
                Provides goals to control certain environmental constraints
                such as Maven version, JDK version.
            -->
            <plugin>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-rules</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>${maven.version}</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>[${java.version},)</version>
                                </requireJavaVersion>
                                <bannedDependencies>
                                    <excludes>
                                        <exclude>commons-logging:*:*</exclude>
                                        <exclude>org.hibernate:hibernate-validator:*</exclude>
                                        <exclude>log4j:*</exclude>
                                    </excludes>
                                    <searchTransitive>true</searchTransitive>
                                </bannedDependencies>
                                <dependencyConvergence/>
                            </rules>
                            <fail>true</fail>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--
                A Maven plugin to find and flag duplicate classes and
                resources on the java classpath.
                This ensures stability and reproducibility of a maven build
                and will flag possible problems or conflicts with
                dependencies in a project.
            -->
            <plugin>
                <groupId>org.basepom.maven</groupId>
                <artifactId>duplicate-finder-maven-plugin</artifactId>
                <version>1.3.0</version>
                <executions>
                    <execution>
                        <id>verify-duplicated-resources</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <failBuildInCaseOfConflict>false</failBuildInCaseOfConflict>
                            <checkTestClasspath>false</checkTestClasspath>
                            <ignoredClassPatterns>
                                <ignoredClassPattern>io.swagger.client.ApiClient</ignoredClassPattern>
                                <ignoredClassPattern>io.swagger.client.ApiException</ignoredClassPattern>
                                <ignoredClassPattern>META-INF.versions.9.module-info</ignoredClassPattern>
                            </ignoredClassPatterns>
                            <ignoredResourcePatterns>
                                <ignoredResourcePattern>application.properties</ignoredResourcePattern>
                                <ignoredResourcePattern>banner.txt</ignoredResourcePattern>
                                <ignoredResourcePattern>changelog.txt</ignoredResourcePattern>
                                <ignoredResourcePattern>com/amazonaws/xray/sdk.properties</ignoredResourcePattern>
                                <ignoredResourcePattern>i18n.properties</ignoredResourcePattern>
                                <ignoredResourcePattern>i18n/exceptions(.*).properties</ignoredResourcePattern>
                                <ignoredResourcePattern>i18n/validation-messages(.*).properties</ignoredResourcePattern>
                                <ignoredResourcePattern>jwt.properties</ignoredResourcePattern>
                                <ignoredResourcePattern>liquibase.properties</ignoredResourcePattern>
                                <ignoredResourcePattern>mime.types</ignoredResourcePattern>
                            </ignoredResourcePatterns>
                            <ignoredDependencies>
                                <dependency>
                                    <groupId>org.apache.logging.log4j</groupId>
                                    <artifactId>log4j-api</artifactId>
                                </dependency>
                                <dependency>
                                    <groupId>javax.activation</groupId>
                                    <artifactId>javax.activation-api</artifactId>
                                </dependency>
                                <dependency>
                                    <groupId>javax.persistence</groupId>
                                    <artifactId>javax.persistence-api</artifactId>
                                </dependency>
                                <dependency>
                                    <groupId>javax.xml.bind</groupId>
                                    <artifactId>jaxb-api</artifactId>
                                </dependency>
                                <dependency>
                                    <groupId>net.bytebuddy</groupId>
                                    <artifactId>byte-buddy</artifactId>
                                </dependency>
                                <dependency>
                                    <groupId>net.bytebuddy</groupId>
                                    <artifactId>byte-buddy-agent</artifactId>
                                </dependency>
                            </ignoredDependencies>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--
                Generates the effective POM as an XML for the current build,
                with the active profiles factored in.
            -->
            <plugin>
                <artifactId>maven-help-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-effective-pom</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>effective-pom</goal>
                        </goals>
                        <configuration>
                            <output>${project.build.directory}/effective-pom/${project.artifactId}.xml</output>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--
                Attach additional artifacts (effective POM) to be installed and deployed.
            -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-effective-pom</id>
                        <phase>package</phase>
                        <goals>
                            <goal>attach-artifact</goal>
                        </goals>
                        <configuration>
                            <artifacts>
                                <artifact>
                                    <file>${project.build.directory}/effective-pom/${project.artifactId}.xml</file>
                                    <type>effective-pom</type>
                                </artifact>
                            </artifacts>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--
                JaCoCo is a free code coverage library for Java, which has been created
                by the EclEmma team based on the lessons learned from using and integration
                existing libraries for many years.
            -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.4</version>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--
                It disables the spring-boot-maven-plugin because the Parent Swagger POM defines it and
                we don't want to use the repackage goal.
                The repackage goal must be defined only on the Starters POMs.
            -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>repackage</id>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>
            <!--
                The Flatten Maven Plugin generates a flattened version of the pom.xml that Maven installs
                and deploys instead of the original. Used because of the ${revision} property.
            -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>1.2.2</version>
                <executions>
                    <execution>
                        <id>flatten-pom</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>clean-flattened-pom</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <updatePomFile>true</updatePomFile>
                    <!-- Only resolves variables revision, sha1 and changelist. Keeps everything else. -->
                    <flattenMode>resolveCiFriendliesOnly</flattenMode>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
