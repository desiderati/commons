<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2022 - Felipe Desiderati
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
  ~ associated documentation files (the "Software"), to deal in the Software without restriction,
  ~ including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
  ~ and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so,
  ~ subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice shall be included in all copies or substantial
  ~ portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
  ~ LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
  ~ IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
  ~ WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
  ~ SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>io.herd.common</groupId>
        <artifactId>common-parent-info</artifactId>
        <version>${revision}</version>
        <!--suppress MavenModelInspection-->
        <relativePath>../common-parent-info</relativePath>
    </parent>
    <artifactId>common-parent</artifactId>
    <packaging>pom</packaging>

    <repositories>
        <repository>
            <id>apollo</id>
            <name>Apollo Graph Repository</name>
            <url>https://dl.bintray.com/apollographql/android</url>
        </repository>
    </repositories>

    <properties>
        <!-- Directory where resources will be generated. -->
        <generated-resources.dir>generated-resources/src/main/resources</generated-resources.dir>

        <!-- Artifact containing the banner.txt file to be copied into the projects. -->
        <banner.txt-group-id>io.herd.common</banner.txt-group-id>
        <banner.txt-artifact-id>common</banner.txt-artifact-id>

        <!-- Liquibase Configuration. -->
        <liquibase.changelog-dir>src/main/resources/db/changelog</liquibase.changelog-dir>
        <liquibase.changelog-file>${maven.build.timestamp}-changelog.xml</liquibase.changelog-file>
        <liquibase.initial-schema-file>0-initial-schema.xml</liquibase.initial-schema-file>

        <!-- Dependencies. -->
        <activemq.version>5.15.12</activemq.version>
        <apollo.version>2.5.6</apollo.version>
        <atmosphere.version>2.5.13</atmosphere.version>
        <atmosphere-spring.version>2.5.2</atmosphere-spring.version>
        <atmosphere-javascript.version>3.0.0</atmosphere-javascript.version>
        <commons-beanutils.version>1.9.4</commons-beanutils.version>
        <commons-codec.version>1.14</commons-codec.version>
        <commons-collections.version>3.2.2</commons-collections.version>
        <commons-collections4.version>4.4</commons-collections4.version>
        <commons-compress.version>1.20</commons-compress.version>
        <commons-dbcp.version>1.4</commons-dbcp.version>
        <commons-dbcp2.version>2.7.0</commons-dbcp2.version>
        <commons-fileupload.version>1.4</commons-fileupload.version>
        <commons-io.version>2.6</commons-io.version>
        <commons-lang3.version>3.10</commons-lang3.version>
        <commons-text.version>1.8</commons-text.version>
        <commons-validator.version>1.6</commons-validator.version>
        <dbunit.version>2.7.0</dbunit.version>
        <embed-mongo.version>2.2.0</embed-mongo.version>
        <google-api.version>1.30.1</google-api.version>
        <google-api-calendar.version>v3-rev379-1.25.0</google-api-calendar.version>
        <graphql-spring-boot-starter.version>11.0.0</graphql-spring-boot-starter.version>
        <graphql-java-extended-scalars.version>16.0.1</graphql-java-extended-scalars.version>
        <gson.version>2.8.6</gson.version>
        <gson-fire.version>1.8.4</gson-fire.version>
        <guava.version>29.0-jre</guava.version>
        <hibernate-types-52.version>2.19.2</hibernate-types-52.version>
        <hikaricp.version>3.4.2</hikaricp.version>
        <hsqldb.version>2.5.0</hsqldb.version>
        <httpclient.version>4.5.12</httpclient.version>
        <jackson-module.version>2.10.3</jackson-module.version>
        <javax.inject.version>1</javax.inject.version>
        <javax.servlet-api.version>4.0.1</javax.servlet-api.version>
        <jaxb-core.version>2.3.0.1</jaxb-core.version>
        <jaxb-api.version>2.3.1</jaxb-api.version>
        <jetbrains-annotations.version>17.0.0</jetbrains-annotations.version>
        <joda-time.version>2.10.5</joda-time.version>
        <jsonwebtoken.version>0.9.1</jsonwebtoken.version>
        <junit-engine.version>5.5.2</junit-engine.version>
        <liquibase.version>3.8.9</liquibase.version>

        <!--
            Only change to the newest version if this bug was solved:
            https://github.com/liquibase/liquibase-hibernate/issues/170
        -->
        <liquibase-hibernate5.version>3.6</liquibase-hibernate5.version>
        <lombok.version>1.18.12</lombok.version>
        <mapstruct.version>1.3.1.Final</mapstruct.version>
        <modelmapper.version>2.3.7</modelmapper.version>
        <mongodb.version>3.12.3</mongodb.version>

        <!-- To maintain compatibility between Apollo and Swagger. -->
        <okio.version>2.10.0</okio.version>
        <okhttp.version>2.7.5</okhttp.version>
        <poi.version>4.1.2</poi.version>
        <postgresql.version>42.2.12</postgresql.version>
        <reflections.version>0.9.12</reflections.version>
        <spring.version>5.2.5.RELEASE</spring.version>
        <spring-cloud.version>Hoxton.SR3</spring-cloud.version>
        <spring-security-test.version>5.3.1.RELEASE</spring-security-test.version>
        <spring-test-dbunit.version>1.3.0</spring-test-dbunit.version>
        <springfox-swagger2.version>3.0.0</springfox-swagger2.version>
        <swagger-core.version>2.1.2</swagger-core.version>
        <testcontainers.version>1.13.0</testcontainers.version>
        <threetenbp.version>1.4.0</threetenbp.version>
        <unboundid-ldapsdk.version>5.0.1</unboundid-ldapsdk.version>
        <zxing.version>3.4.0</zxing.version>
    </properties>

    <build>
        <!-- Turn on filtering by default for application properties. -->
        <resources>
            <resource>
                <directory>${generated-resources.dir}</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/application*.yml</include>
                    <include>**/application*.yaml</include>
                    <include>**/application*.properties</include>
                    <include>**/banner.txt</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <excludes>
                    <exclude>**/application*.yml</exclude>
                    <exclude>**/application*.yaml</exclude>
                    <exclude>**/application*.properties</exclude>
                    <exclude>**/banner.txt</exclude>
                </excludes>
            </resource>
        </resources>

        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <executions>
                        <!-- Replacing default-compile as it is treated specially by Maven. -->
                        <execution>
                            <id>default-compile</id>
                            <phase>none</phase>
                        </execution>
                        <!-- Replacing default-testCompile as it is treated specially by Maven. -->
                        <execution>
                            <id>default-testCompile</id>
                            <phase>none</phase>
                        </execution>
                        <execution>
                            <id>java-compile</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>java-test-compile</id>
                            <phase>test-compile</phase>
                            <goals>
                                <goal>testCompile</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <forceJavacCompilerUse>true</forceJavacCompilerUse>
                        <parameters>true</parameters>
                        <annotationProcessorPaths>
                            <!-- MapStruct Support -->
                            <path>
                                <groupId>org.mapstruct</groupId>
                                <artifactId>mapstruct-processor</artifactId>
                                <version>${mapstruct.version}</version>
                            </path>
                            <!-- Lombok Support -->
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${lombok.version}</version>
                            </path>
                            <!-- Spring Config Properties Processor Support -->
                            <annotationProcessorPath>
                                <groupId>org.springframework.boot</groupId>
                                <artifactId>spring-boot-configuration-processor</artifactId>
                                <version>${spring-boot.version}</version>
                            </annotationProcessorPath>
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>
                <!-- Lombok Support -->
                <plugin>
                    <groupId>org.projectlombok</groupId>
                    <artifactId>lombok-maven-plugin</artifactId>
                    <version>${lombok.version}.0</version>
                    <executions>
                        <execution>
                            <id>delombok</id>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>delombok</goal>
                            </goals>
                            <configuration>
                                <addOutputDirectory>false</addOutputDirectory>
                                <sourceDirectory>src/main/java</sourceDirectory>
                            </configuration>
                        </execution>
                        <execution>
                            <id>test-delombok</id>
                            <phase>generate-test-sources</phase>
                            <goals>
                                <goal>testDelombok</goal>
                            </goals>
                            <configuration>
                                <addOutputDirectory>false</addOutputDirectory>
                                <sourceDirectory>src/test/java</sourceDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <!-- Kotlin Support -->
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>
                <configuration>
                    <jvmTarget>${java.version}</jvmTarget>
                    <javaParameters>true</javaParameters>
                    <compilerPlugins>
                        <plugin>all-open</plugin>
                        <plugin>no-arg</plugin>
                        <plugin>spring</plugin>
                        <plugin>jpa</plugin>
                    </compilerPlugins>
                    <!--
                        One of Kotlin’s key features is null-safety - which cleanly deals with null values
                        at compile time rather than bumping into the famous NullPointerException at runtime.
                        This makes applications safer through nullability declarations and expressing
                        "value or no value" semantics without paying the cost of wrappers like Optional.
                        Note that Kotlin allows using functional constructs with nullable values; check out
                        this comprehensive guide to Kotlin null-safety.

                        Although Java does not allow one to express null-safety in its type-system, Spring
                        Framework provides null-safety of the whole Spring Framework API via tooling-friendly
                        annotations declared in the org.springframework.lang package. By default, types from
                        Java APIs used in Kotlin are recognized as platform types for which null-checks are
                        relaxed. Kotlin support for JSR 305 annotations + Spring nullability annotations
                        provide null-safety for the whole Spring Framework API to Kotlin developers, with the
                        advantage of dealing with null related issues at compile time.

                        This feature can be enabled by adding the -Xjsr305 compiler flag with the strict options.
                    -->
                    <args>
                        <arg>-Xjsr305=strict</arg>
                    </args>
                </configuration>
                <executions>
                    <execution>
                        <id>kotlin-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
                                <sourceDir>${project.basedir}/src/main/java</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                    <execution>
                        <id>kotlin-test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
                                <sourceDir>${project.basedir}/src/test/java</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-allopen</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-noarg</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!--
                Generates a diff between the specified database and the domain classes.
            -->
            <plugin>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-maven-plugin</artifactId>
                <version>${liquibase.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>org.liquibase.ext</groupId>
                        <artifactId>liquibase-hibernate5</artifactId>
                        <version>${liquibase-hibernate5.version}</version>

                        <!-- To ensure that we are using the same Hibernate version. -->
                        <exclusions>
                            <exclusion>
                                <groupId>org.hibernate</groupId>
                                <artifactId>hibernate-core</artifactId>
                            </exclusion>
                            <exclusion>
                                <groupId>org.hibernate</groupId>
                                <artifactId>hibernate-entitymanager</artifactId>
                            </exclusion>
                            <exclusion>
                                <groupId>org.hibernate</groupId>
                                <artifactId>hibernate-envers</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>

                    <!-- These dependencies are necessary to run the Liquibase. -->
                    <dependency>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-beans</artifactId>
                        <version>${spring.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-core</artifactId>
                        <version>${spring.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-context</artifactId>
                        <version>${spring.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-orm</artifactId>
                        <version>${spring.version}</version>
                    </dependency>

                    <!-- To ensure that we are using the same Hibernate version. -->
                    <dependency>
                        <groupId>org.hibernate</groupId>
                        <artifactId>hibernate-entitymanager</artifactId>
                        <version>${hibernate.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.hibernate.validator</groupId>
                        <artifactId>hibernate-validator</artifactId>
                        <version>${hibernate-validator.version}</version>
                    </dependency>

                    <!--
                        Since version 11 you need to manually add below
                        JAXB Maven dependencies to your project.
                    -->
                    <dependency>
                        <groupId>com.sun.xml.bind</groupId>
                        <artifactId>jaxb-core</artifactId>
                        <version>${jaxb-core.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>javax.xml.bind</groupId>
                        <artifactId>jaxb-api</artifactId>
                        <version>${jaxb-api.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>com.sun.xml.bind</groupId>
                        <artifactId>jaxb-impl</artifactId>
                        <version>${jaxb-api.version}</version>
                    </dependency>

                    <!-- To access the naming strategy. -->
                    <dependency>
                        <groupId>io.herd.common</groupId>
                        <artifactId>common</artifactId>
                        <!--
                            I've tried to use ${project.parent.version}, but when using this property,
                            it occurs this error: Fail to load artifact version.
                        -->
                        <version>${commons-herd.io.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <propertyFileWillOverride>true</propertyFileWillOverride>
                    <propertyFile>src/main/resources/liquibase.properties</propertyFile>
                    <changeSetAuthor>maven</changeSetAuthor>
                    <changeLogFile>${liquibase.changelog-dir}/${liquibase.initial-schema-file}</changeLogFile>
                    <outputChangeLogFile>${liquibase.changelog-dir}/${liquibase.initial-schema-file}</outputChangeLogFile>
                    <diffChangeLogFile>${liquibase.changelog-dir}/${liquibase.changelog-file}</diffChangeLogFile>
                </configuration>
            </plugin>
            <!--
                It copies the project banner which will be used to log the project name and version!
            -->
            <plugin>
                <!--suppress MavenModelInspection-->
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-project-banner</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <overWriteIfNewer>true</overWriteIfNewer>
                            <type>jar</type>
                            <includeGroupIds>${banner.txt-group-id}</includeGroupIds>
                            <includeArtifactIds>${banner.txt-artifact-id}</includeArtifactIds>
                            <includes>banner.txt</includes>
                            <outputDirectory>${generated-resources.dir}</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencyManagement>
        <dependencies>
            <!-- Commons Herd.io -->
            <dependency>
                <groupId>io.herd.common</groupId>
                <artifactId>common</artifactId>
                <version>${commons-herd.io.version}</version>
            </dependency>
            <dependency>
                <groupId>io.herd.common</groupId>
                <artifactId>common-data-jpa</artifactId>
                <version>${commons-herd.io.version}</version>
            </dependency>
            <dependency>
                <groupId>io.herd.common</groupId>
                <artifactId>common-data-mongodb</artifactId>
                <version>${commons-herd.io.version}</version>
            </dependency>
            <dependency>
                <groupId>io.herd.common</groupId>
                <artifactId>common-google</artifactId>
                <version>${commons-herd.io.version}</version>
            </dependency>
            <dependency>
                <groupId>io.herd.common</groupId>
                <artifactId>common-jms</artifactId>
                <version>${commons-herd.io.version}</version>
            </dependency>
            <dependency>
                <groupId>io.herd.common</groupId>
                <artifactId>common-logging</artifactId>
                <version>${commons-herd.io.version}</version>
            </dependency>
            <dependency>
                <groupId>io.herd.common</groupId>
                <artifactId>common-logging-test</artifactId>
                <version>${commons-herd.io.version}</version>
            </dependency>
            <dependency>
                <groupId>io.herd.common</groupId>
                <artifactId>common-scanner</artifactId>
                <version>${commons-herd.io.version}</version>
            </dependency>
            <dependency>
                <groupId>io.herd.common</groupId>
                <artifactId>common-test</artifactId>
                <version>${commons-herd.io.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.herd.common</groupId>
                <artifactId>common-web</artifactId>
                <version>${commons-herd.io.version}</version>
            </dependency>
            <dependency>
                <groupId>io.herd.common</groupId>
                <artifactId>common-web-notification</artifactId>
                <version>${commons-herd.io.version}</version>
            </dependency>
            <dependency>
                <groupId>io.herd.common</groupId>
                <artifactId>common-web-security</artifactId>
                <version>${commons-herd.io.version}</version>
            </dependency>

            <!-- Javax -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${javax.servlet-api.version}</version>
                <optional>true</optional>
            </dependency>
            <dependency>
                <groupId>javax.inject</groupId>
                <artifactId>javax.inject</artifactId>
                <version>${javax.inject.version}</version>
            </dependency>

            <!-- Spring -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-configuration-processor</artifactId>
                <version>${spring-boot.version}</version>
                <optional>true</optional>
            </dependency>
            <dependency>
                <!-- Hot Swapping. Disable Cache for Template. Enable Live Reload. -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-devtools</artifactId>
                <version>${spring-boot.version}</version>
                <optional>true</optional>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Needed if you are going to use the Hibernate Validator out of a web context. -->
            <dependency>
                <groupId>org.glassfish</groupId>
                <artifactId>jakarta.el</artifactId>
                <version>${glassfish-el.version}</version>
            </dependency>

            <!-- Apache Commons and others libs like Guava -->
            <dependency>
                <groupId>org.reflections</groupId>
                <artifactId>reflections</artifactId>
                <version>${reflections.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.javassist</groupId>
                        <artifactId>javassist</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${commons-collections4.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-compress</artifactId>
                <version>${commons-compress.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-dbcp2</artifactId>
                <version>${commons-dbcp2.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-text</artifactId>
                <version>${commons-text.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${httpclient.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpmime</artifactId>
                <version>${httpclient.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${commons-beanutils.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commons-codec.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>${commons-collections.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-dbcp</groupId>
                <artifactId>commons-dbcp</artifactId>
                <version>${commons-dbcp.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-fileupload</groupId>
                <artifactId>commons-fileupload</artifactId>
                <version>${commons-fileupload.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-validator</groupId>
                <artifactId>commons-validator</artifactId>
                <version>${commons-validator.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <!-- Apache POI -->
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi</artifactId>
                <version>${poi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>${poi.version}</version>
            </dependency>

            <!-- Mapping Frameworks -->
            <dependency>
                <groupId>org.modelmapper</groupId>
                <artifactId>modelmapper</artifactId>
                <version>${modelmapper.version}</version>
            </dependency>
            <dependency>
                <!-- Use Model Mapper on JSON -->
                <groupId>org.modelmapper.extensions</groupId>
                <artifactId>modelmapper-jackson</artifactId>
                <version>${modelmapper.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>

            <!-- Lombok - -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>

            <!-- Connection Pool -->
            <dependency>
                <groupId>com.zaxxer</groupId>
                <artifactId>HikariCP</artifactId>
                <version>${hikaricp.version}</version>
            </dependency>

            <!-- GraphQL Client -->
            <dependency>
                <groupId>com.graphql-java-kickstart</groupId>
                <artifactId>graphql-spring-boot-starter</artifactId>
                <version>${graphql-spring-boot-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>com.graphql-java</groupId>
                <artifactId>graphql-java-extended-scalars</artifactId>
                <version>${graphql-java-extended-scalars.version}</version>
            </dependency>
            <dependency>
                <groupId>com.apollographql.apollo</groupId>
                <artifactId>apollo-runtime</artifactId>
                <version>${apollo.version}</version>
                <exclusions>
                    <!-- To maintain compatibility with Swagger. -->
                    <exclusion>
                        <groupId>com.squareup.okio</groupId>
                        <artifactId>okio</artifactId>
                    </exclusion>
                    <!-- To maintain compatibility with Guava. -->
                    <exclusion>
                        <groupId>com.google.code.findbugs</groupId>
                        <artifactId>jsr305</artifactId>
                    </exclusion>
                    <!-- To old to be used. Use the one defined in this file. -->
                    <exclusion>
                        <groupId>org.jetbrains</groupId>
                        <artifactId>annotations</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.apollographql.apollo</groupId>
                <artifactId>apollo-coroutines-support</artifactId>
                <version>${apollo.version}</version>
                <exclusions>
                    <!-- Already imported by: graphql-spring-boot-starter -->
                    <exclusion>
                        <groupId>org.jetbrains.kotlinx</groupId>
                        <artifactId>kotlinx-coroutines-core-jvm</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- Swagger -->
            <dependency>
                <groupId>io.swagger.core.v3</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger-core.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-boot-starter</artifactId>
                <version>${springfox-swagger2.version}</version>
            </dependency>

            <!-- To run Swagger Client Api. Only if choose 'okhttp-gson' library. -->
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda-time.version}</version>
            </dependency>
            <dependency>
                <groupId>io.gsonfire</groupId>
                <artifactId>gson-fire</artifactId>
                <version>${gson-fire.version}</version>
            </dependency>
            <dependency>
                <groupId>org.threeten</groupId>
                <artifactId>threetenbp</artifactId>
                <version>${threetenbp.version}</version>
            </dependency>
            <dependency>
                <!-- We had to force this to have compatibility with Apollo GraphQL. -->
                <groupId>com.squareup.okio</groupId>
                <artifactId>okio</artifactId>
                <version>${okio.version}</version>
                <exclusions>
                    <!-- To old to be used. Use the one defined in this file. -->
                    <exclusion>
                        <groupId>org.jetbrains</groupId>
                        <artifactId>annotations</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.squareup.okhttp</groupId>
                <artifactId>okhttp</artifactId>
                <version>${okhttp.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.squareup.okio</groupId>
                        <artifactId>okio</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.squareup.okhttp</groupId>
                <artifactId>logging-interceptor</artifactId>
                <version>${okhttp.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.squareup.okio</groupId>
                        <artifactId>okio</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- MongoDB -->
            <dependency>
                <groupId>org.mongodb</groupId>
                <artifactId>mongo-java-driver</artifactId>
                <version>${mongodb.version}</version>
            </dependency>

            <!-- Fake MongoDB -->
            <dependency>
                <groupId>de.flapdoodle.embed</groupId>
                <artifactId>de.flapdoodle.embed.mongo</artifactId>
                <version>${embed-mongo.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- Embedded Ldap -->
            <dependency>
                <groupId>com.unboundid</groupId>
                <artifactId>unboundid-ldapsdk</artifactId>
                <version>${unboundid-ldapsdk.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- QRCode -->
            <dependency>
                <groupId>com.google.zxing</groupId>
                <artifactId>core</artifactId>
                <version>${zxing.version}</version>
            </dependency>

            <!-- JWT -->
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>${jsonwebtoken.version}</version>
            </dependency>

            <!-- Atmoosphere Web Socket -->
            <dependency>
                <groupId>org.atmosphere</groupId>
                <artifactId>atmosphere-runtime</artifactId>
                <version>${atmosphere.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.ow2.asm</groupId>
                        <artifactId>asm</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <!--
                    Starting with Atmosphere 2.3.0+ Atmosphere have basic support for injection.
                    You may also enable Spring injection by just adding the artifact on you classpath.
                -->
                <groupId>org.atmosphere</groupId>
                <artifactId>atmosphere-spring</artifactId>
                <version>${atmosphere-spring.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.ow2.asm</groupId>
                        <artifactId>asm</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>atmosphere-javascript</artifactId>
                <version>${atmosphere-javascript.version}</version>
            </dependency>

            <!-- Active MQ -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-jms</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.activemq</groupId>
                <artifactId>activemq-kahadb-store</artifactId>
                <version>${activemq.version}</version>
            </dependency>

            <!-- Google APIs -->
            <dependency>
                <groupId>com.google.api-client</groupId>
                <artifactId>google-api-client</artifactId>
                <version>${google-api.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.apis</groupId>
                <artifactId>google-api-services-calendar</artifactId>
                <version>${google-api-calendar.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.oauth-client</groupId>
                <artifactId>google-oauth-client-jetty</artifactId>
                <version>${google-api.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.mortbay.jetty</groupId>
                        <artifactId>servlet-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- Liquibase -->
            <dependency>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-core</artifactId>
                <version>${liquibase.version}</version>
            </dependency>

            <!-- Hibernate Types -->
            <dependency>
                <groupId>com.vladmihalcea</groupId>
                <artifactId>hibernate-types-52</artifactId>
                <version>${hibernate-types-52.version}</version>
            </dependency>

            <!-- Databases -->
            <dependency>
                <groupId>org.hsqldb</groupId>
                <artifactId>hsqldb</artifactId>
                <version>${hsqldb.version}</version>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.version}</version>
                <scope>runtime</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!--
        Dependencies that will be common to all subprojects!
    -->
    <dependencies>
        <!-- Used by Jetbrains IntelliJ -->
        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <version>${jetbrains-annotations.version}</version>
        </dependency>

        <!-- Kotlin -->
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
            <version>${kotlin.version}</version>
            <exclusions>
                <!-- To old to be used. Use the one defined in this file. -->
                <exclusion>
                    <groupId>org.jetbrains</groupId>
                    <artifactId>annotations</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-kotlin</artifactId>
            <version>${jackson-module.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-jaxb-annotations</artifactId>
            <version>${jackson-module.version}</version>
        </dependency>

        <!-- Useful Test Dependencies -->
        <dependency>
            <groupId>io.herd.common</groupId>
            <artifactId>common-logging-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <version>${spring-security-test.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit-engine.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit-engine.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.dbunit</groupId>
            <artifactId>dbunit</artifactId>
            <version>${dbunit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.springtestdbunit</groupId>
            <artifactId>spring-test-dbunit</artifactId>
            <version>${spring-test-dbunit.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <version>${testcontainers.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${testcontainers.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>localstack</artifactId>
            <version>${testcontainers.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>mysql</artifactId>
            <version>${testcontainers.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <version>${testcontainers.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

</project>
