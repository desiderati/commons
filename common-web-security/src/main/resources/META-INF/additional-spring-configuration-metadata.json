{
  "groups": [
    {
      "name": "spring.web.security.jwt.authentication.cors",
      "type": "io.herd.common.web.configuration.CorsProperties"
    },
    {
      "name": "spring.web.security.sign-request.authorization.client",
      "type": "io.herd.common.web.security.sign_request.authorization.SignRequestAuthorizationClientProperties"
    }
  ],
  "properties": [
    {
      "name": "spring.web.security.default.authentication.enabled",
      "description": "It defines if the default Authentication will be enabled or not.",
      "type": "java.lang.Boolean",
      "defaultValue": false
    },
    {
      "name": "spring.web.security.jwt.authentication.enabled",
      "description": "It defines if JWT Authentication will be enabled or not. Process of retrieving the user/password from the Request Body and verifying if the password matches. Here we will obtain all roles configured for the user.",
      "type": "java.lang.Boolean",
      "defaultValue": false
    },
    {
      "name": "spring.web.security.jwt.authentication.login-url",
      "description": "Sets the URL that determines if authentication is required.",
      "type": "java.lang.String",
      "defaultValue": "/login"
    },
    {
      "name": "spring.web.security.jwt.authentication.expiration-period",
      "description": "The period of time in which the JWT token expires or terminates (In Hours).",
      "type": "java.lang.Integer",
      "defaultValue": 1
    },
    {
      "name": "spring.web.security.jwt.authentication.encryption-method",
      "description": "It defines the encryption method to be used to encrypt/decrypt the JWT Token. Possible values: asymmetric, symmetric.",
      "type": "io.herd.common.web.security.jwt.JwtEncryptionMethod",
      "defaultValue": "asymmetric"
    },
    {
      "name": "spring.web.security.jwt.authentication.cors.allowed-methods",
      "type": "java.lang.String",
      "description": "Set the HTTP methods to allow, e.g. GET, POST, etc. The special value '*' allows all methods.",
      "defaultValue": ["POST"]
    },
    {
      "name": "spring.web.security.jwt.authentication.cors.allowed-headers",
      "type": "java.lang.String",
      "description": "Set the list of headers that a preflight request can list as allowed for use during an actual request. The special value '*', may be used to allow all headers. By default all headers are allowed.",
      "defaultValue": ["*"]
    },
    {
      "name": "spring.web.security.jwt.authentication.cors.allowed-origins",
      "type": "java.lang.String",
      "description": "The list of allowed origins that be specific origins, e.g. 'https://domain1.com', or '*' for all origins. By default, all origins are allowed.",
      "defaultValue": ["*"]
    },
    {
      "name": "spring.web.security.jwt.authentication.cors.exposed-headers",
      "type": "java.lang.String",
      "description": "Set the list of response headers other than 'simple', headers, i.e. Cache-Control, Content-Language, Content-Type, Expires, Last-Modified, or Pragma, that an actual response might have and can be exposed. Note that '*' is not supported on this property.",
      "defaultValue": ["Authorization"]
    },
    {
      "name": "spring.web.security.jwt.authentication.delegation.enabled",
      "description": "It defines if JWT Authentication Delegation will be enabled or not. Process of retrieving the user/password from the Request Body and verifying if the password matches is delegated to another API.",
      "type": "java.lang.Boolean",
      "defaultValue": false
    },
    {
      "name": "spring.web.security.jwt.authentication.delegation.base-path",
      "description": "It defines the base path for the JWT Authentication Delegation API.",
      "type": "java.lang.String"
    },
    {
      "name": "spring.web.security.jwt.authentication.delegation.login-url",
      "description": "Sets the URL that determines if authentication is required for the JWT Authentication Delegation API.",
      "type": "java.lang.String",
      "defaultValue": "/login"
    },
    {
      "name": "spring.web.security.jwt.authorization.enabled",
      "description": "It defines if JWT Authorization will be enabled or not.",
      "type": "java.lang.Boolean",
      "defaultValue": false
    },
    {
      "name": "spring.web.security.sign-request.authorization.enabled",
      "description": "It defines if Sign Request Authorization will be enabled or not.",
      "type": "java.lang.Boolean",
      "defaultValue": false
    },
    {
      "name": "spring.web.security.sign-request.authorization.client.id",
      "description": "Defines the client id.",
      "type": "java.util.UUID"
    },
    {
      "name": "spring.web.security.sign-request.authorization.client.secret-key",
      "description": "Defines the secret key associated with the client id, which will be used to sign the request.",
      "type": "java.lang.String"
    }
  ]
}
