{"version":3,"file":"167.js","sources":["../node_modules/.pnpm/actioncable@5.2.6/node_modules/actioncable/lib/assets/compiled/action_cable.js","../altair-core/src/request/handlers/action-cable.ts"],"sourceRoot":"webpack:///","sourcesContent":["(function() {\n  var context = this;\n\n  (function() {\n    (function() {\n      var slice = [].slice;\n\n      this.ActionCable = {\n        INTERNAL: {\n          \"message_types\": {\n            \"welcome\": \"welcome\",\n            \"ping\": \"ping\",\n            \"confirmation\": \"confirm_subscription\",\n            \"rejection\": \"reject_subscription\"\n          },\n          \"default_mount_path\": \"/cable\",\n          \"protocols\": [\"actioncable-v1-json\", \"actioncable-unsupported\"]\n        },\n        WebSocket: window.WebSocket,\n        logger: window.console,\n        createConsumer: function(url) {\n          var ref;\n          if (url == null) {\n            url = (ref = this.getConfig(\"url\")) != null ? ref : this.INTERNAL.default_mount_path;\n          }\n          return new ActionCable.Consumer(this.createWebSocketURL(url));\n        },\n        getConfig: function(name) {\n          var element;\n          element = document.head.querySelector(\"meta[name='action-cable-\" + name + \"']\");\n          return element != null ? element.getAttribute(\"content\") : void 0;\n        },\n        createWebSocketURL: function(url) {\n          var a;\n          if (url && !/^wss?:/i.test(url)) {\n            a = document.createElement(\"a\");\n            a.href = url;\n            a.href = a.href;\n            a.protocol = a.protocol.replace(\"http\", \"ws\");\n            return a.href;\n          } else {\n            return url;\n          }\n        },\n        startDebugging: function() {\n          return this.debugging = true;\n        },\n        stopDebugging: function() {\n          return this.debugging = null;\n        },\n        log: function() {\n          var messages, ref;\n          messages = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n          if (this.debugging) {\n            messages.push(Date.now());\n            return (ref = this.logger).log.apply(ref, [\"[ActionCable]\"].concat(slice.call(messages)));\n          }\n        }\n      };\n\n    }).call(this);\n  }).call(context);\n\n  var ActionCable = context.ActionCable;\n\n  (function() {\n    (function() {\n      var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\n      ActionCable.ConnectionMonitor = (function() {\n        var clamp, now, secondsSince;\n\n        ConnectionMonitor.pollInterval = {\n          min: 3,\n          max: 30\n        };\n\n        ConnectionMonitor.staleThreshold = 6;\n\n        function ConnectionMonitor(connection) {\n          this.connection = connection;\n          this.visibilityDidChange = bind(this.visibilityDidChange, this);\n          this.reconnectAttempts = 0;\n        }\n\n        ConnectionMonitor.prototype.start = function() {\n          if (!this.isRunning()) {\n            this.startedAt = now();\n            delete this.stoppedAt;\n            this.startPolling();\n            document.addEventListener(\"visibilitychange\", this.visibilityDidChange);\n            return ActionCable.log(\"ConnectionMonitor started. pollInterval = \" + (this.getPollInterval()) + \" ms\");\n          }\n        };\n\n        ConnectionMonitor.prototype.stop = function() {\n          if (this.isRunning()) {\n            this.stoppedAt = now();\n            this.stopPolling();\n            document.removeEventListener(\"visibilitychange\", this.visibilityDidChange);\n            return ActionCable.log(\"ConnectionMonitor stopped\");\n          }\n        };\n\n        ConnectionMonitor.prototype.isRunning = function() {\n          return (this.startedAt != null) && (this.stoppedAt == null);\n        };\n\n        ConnectionMonitor.prototype.recordPing = function() {\n          return this.pingedAt = now();\n        };\n\n        ConnectionMonitor.prototype.recordConnect = function() {\n          this.reconnectAttempts = 0;\n          this.recordPing();\n          delete this.disconnectedAt;\n          return ActionCable.log(\"ConnectionMonitor recorded connect\");\n        };\n\n        ConnectionMonitor.prototype.recordDisconnect = function() {\n          this.disconnectedAt = now();\n          return ActionCable.log(\"ConnectionMonitor recorded disconnect\");\n        };\n\n        ConnectionMonitor.prototype.startPolling = function() {\n          this.stopPolling();\n          return this.poll();\n        };\n\n        ConnectionMonitor.prototype.stopPolling = function() {\n          return clearTimeout(this.pollTimeout);\n        };\n\n        ConnectionMonitor.prototype.poll = function() {\n          return this.pollTimeout = setTimeout((function(_this) {\n            return function() {\n              _this.reconnectIfStale();\n              return _this.poll();\n            };\n          })(this), this.getPollInterval());\n        };\n\n        ConnectionMonitor.prototype.getPollInterval = function() {\n          var interval, max, min, ref;\n          ref = this.constructor.pollInterval, min = ref.min, max = ref.max;\n          interval = 5 * Math.log(this.reconnectAttempts + 1);\n          return Math.round(clamp(interval, min, max) * 1000);\n        };\n\n        ConnectionMonitor.prototype.reconnectIfStale = function() {\n          if (this.connectionIsStale()) {\n            ActionCable.log(\"ConnectionMonitor detected stale connection. reconnectAttempts = \" + this.reconnectAttempts + \", pollInterval = \" + (this.getPollInterval()) + \" ms, time disconnected = \" + (secondsSince(this.disconnectedAt)) + \" s, stale threshold = \" + this.constructor.staleThreshold + \" s\");\n            this.reconnectAttempts++;\n            if (this.disconnectedRecently()) {\n              return ActionCable.log(\"ConnectionMonitor skipping reopening recent disconnect\");\n            } else {\n              ActionCable.log(\"ConnectionMonitor reopening\");\n              return this.connection.reopen();\n            }\n          }\n        };\n\n        ConnectionMonitor.prototype.connectionIsStale = function() {\n          var ref;\n          return secondsSince((ref = this.pingedAt) != null ? ref : this.startedAt) > this.constructor.staleThreshold;\n        };\n\n        ConnectionMonitor.prototype.disconnectedRecently = function() {\n          return this.disconnectedAt && secondsSince(this.disconnectedAt) < this.constructor.staleThreshold;\n        };\n\n        ConnectionMonitor.prototype.visibilityDidChange = function() {\n          if (document.visibilityState === \"visible\") {\n            return setTimeout((function(_this) {\n              return function() {\n                if (_this.connectionIsStale() || !_this.connection.isOpen()) {\n                  ActionCable.log(\"ConnectionMonitor reopening stale connection on visibilitychange. visbilityState = \" + document.visibilityState);\n                  return _this.connection.reopen();\n                }\n              };\n            })(this), 200);\n          }\n        };\n\n        now = function() {\n          return new Date().getTime();\n        };\n\n        secondsSince = function(time) {\n          return (now() - time) / 1000;\n        };\n\n        clamp = function(number, min, max) {\n          return Math.max(min, Math.min(max, number));\n        };\n\n        return ConnectionMonitor;\n\n      })();\n\n    }).call(this);\n    (function() {\n      var i, message_types, protocols, ref, supportedProtocols, unsupportedProtocol,\n        slice = [].slice,\n        bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n        indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\n      ref = ActionCable.INTERNAL, message_types = ref.message_types, protocols = ref.protocols;\n\n      supportedProtocols = 2 <= protocols.length ? slice.call(protocols, 0, i = protocols.length - 1) : (i = 0, []), unsupportedProtocol = protocols[i++];\n\n      ActionCable.Connection = (function() {\n        Connection.reopenDelay = 500;\n\n        function Connection(consumer) {\n          this.consumer = consumer;\n          this.open = bind(this.open, this);\n          this.subscriptions = this.consumer.subscriptions;\n          this.monitor = new ActionCable.ConnectionMonitor(this);\n          this.disconnected = true;\n        }\n\n        Connection.prototype.send = function(data) {\n          if (this.isOpen()) {\n            this.webSocket.send(JSON.stringify(data));\n            return true;\n          } else {\n            return false;\n          }\n        };\n\n        Connection.prototype.open = function() {\n          if (this.isActive()) {\n            ActionCable.log(\"Attempted to open WebSocket, but existing socket is \" + (this.getState()));\n            return false;\n          } else {\n            ActionCable.log(\"Opening WebSocket, current state is \" + (this.getState()) + \", subprotocols: \" + protocols);\n            if (this.webSocket != null) {\n              this.uninstallEventHandlers();\n            }\n            this.webSocket = new ActionCable.WebSocket(this.consumer.url, protocols);\n            this.installEventHandlers();\n            this.monitor.start();\n            return true;\n          }\n        };\n\n        Connection.prototype.close = function(arg) {\n          var allowReconnect, ref1;\n          allowReconnect = (arg != null ? arg : {\n            allowReconnect: true\n          }).allowReconnect;\n          if (!allowReconnect) {\n            this.monitor.stop();\n          }\n          if (this.isActive()) {\n            return (ref1 = this.webSocket) != null ? ref1.close() : void 0;\n          }\n        };\n\n        Connection.prototype.reopen = function() {\n          var error;\n          ActionCable.log(\"Reopening WebSocket, current state is \" + (this.getState()));\n          if (this.isActive()) {\n            try {\n              return this.close();\n            } catch (error1) {\n              error = error1;\n              return ActionCable.log(\"Failed to reopen WebSocket\", error);\n            } finally {\n              ActionCable.log(\"Reopening WebSocket in \" + this.constructor.reopenDelay + \"ms\");\n              setTimeout(this.open, this.constructor.reopenDelay);\n            }\n          } else {\n            return this.open();\n          }\n        };\n\n        Connection.prototype.getProtocol = function() {\n          var ref1;\n          return (ref1 = this.webSocket) != null ? ref1.protocol : void 0;\n        };\n\n        Connection.prototype.isOpen = function() {\n          return this.isState(\"open\");\n        };\n\n        Connection.prototype.isActive = function() {\n          return this.isState(\"open\", \"connecting\");\n        };\n\n        Connection.prototype.isProtocolSupported = function() {\n          var ref1;\n          return ref1 = this.getProtocol(), indexOf.call(supportedProtocols, ref1) >= 0;\n        };\n\n        Connection.prototype.isState = function() {\n          var ref1, states;\n          states = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n          return ref1 = this.getState(), indexOf.call(states, ref1) >= 0;\n        };\n\n        Connection.prototype.getState = function() {\n          var ref1, state, value;\n          for (state in WebSocket) {\n            value = WebSocket[state];\n            if (value === ((ref1 = this.webSocket) != null ? ref1.readyState : void 0)) {\n              return state.toLowerCase();\n            }\n          }\n          return null;\n        };\n\n        Connection.prototype.installEventHandlers = function() {\n          var eventName, handler;\n          for (eventName in this.events) {\n            handler = this.events[eventName].bind(this);\n            this.webSocket[\"on\" + eventName] = handler;\n          }\n        };\n\n        Connection.prototype.uninstallEventHandlers = function() {\n          var eventName;\n          for (eventName in this.events) {\n            this.webSocket[\"on\" + eventName] = function() {};\n          }\n        };\n\n        Connection.prototype.events = {\n          message: function(event) {\n            var identifier, message, ref1, type;\n            if (!this.isProtocolSupported()) {\n              return;\n            }\n            ref1 = JSON.parse(event.data), identifier = ref1.identifier, message = ref1.message, type = ref1.type;\n            switch (type) {\n              case message_types.welcome:\n                this.monitor.recordConnect();\n                return this.subscriptions.reload();\n              case message_types.ping:\n                return this.monitor.recordPing();\n              case message_types.confirmation:\n                return this.subscriptions.notify(identifier, \"connected\");\n              case message_types.rejection:\n                return this.subscriptions.reject(identifier);\n              default:\n                return this.subscriptions.notify(identifier, \"received\", message);\n            }\n          },\n          open: function() {\n            ActionCable.log(\"WebSocket onopen event, using '\" + (this.getProtocol()) + \"' subprotocol\");\n            this.disconnected = false;\n            if (!this.isProtocolSupported()) {\n              ActionCable.log(\"Protocol is unsupported. Stopping monitor and disconnecting.\");\n              return this.close({\n                allowReconnect: false\n              });\n            }\n          },\n          close: function(event) {\n            ActionCable.log(\"WebSocket onclose event\");\n            if (this.disconnected) {\n              return;\n            }\n            this.disconnected = true;\n            this.monitor.recordDisconnect();\n            return this.subscriptions.notifyAll(\"disconnected\", {\n              willAttemptReconnect: this.monitor.isRunning()\n            });\n          },\n          error: function() {\n            return ActionCable.log(\"WebSocket onerror event\");\n          }\n        };\n\n        return Connection;\n\n      })();\n\n    }).call(this);\n    (function() {\n      var slice = [].slice;\n\n      ActionCable.Subscriptions = (function() {\n        function Subscriptions(consumer) {\n          this.consumer = consumer;\n          this.subscriptions = [];\n        }\n\n        Subscriptions.prototype.create = function(channelName, mixin) {\n          var channel, params, subscription;\n          channel = channelName;\n          params = typeof channel === \"object\" ? channel : {\n            channel: channel\n          };\n          subscription = new ActionCable.Subscription(this.consumer, params, mixin);\n          return this.add(subscription);\n        };\n\n        Subscriptions.prototype.add = function(subscription) {\n          this.subscriptions.push(subscription);\n          this.consumer.ensureActiveConnection();\n          this.notify(subscription, \"initialized\");\n          this.sendCommand(subscription, \"subscribe\");\n          return subscription;\n        };\n\n        Subscriptions.prototype.remove = function(subscription) {\n          this.forget(subscription);\n          if (!this.findAll(subscription.identifier).length) {\n            this.sendCommand(subscription, \"unsubscribe\");\n          }\n          return subscription;\n        };\n\n        Subscriptions.prototype.reject = function(identifier) {\n          var i, len, ref, results, subscription;\n          ref = this.findAll(identifier);\n          results = [];\n          for (i = 0, len = ref.length; i < len; i++) {\n            subscription = ref[i];\n            this.forget(subscription);\n            this.notify(subscription, \"rejected\");\n            results.push(subscription);\n          }\n          return results;\n        };\n\n        Subscriptions.prototype.forget = function(subscription) {\n          var s;\n          this.subscriptions = (function() {\n            var i, len, ref, results;\n            ref = this.subscriptions;\n            results = [];\n            for (i = 0, len = ref.length; i < len; i++) {\n              s = ref[i];\n              if (s !== subscription) {\n                results.push(s);\n              }\n            }\n            return results;\n          }).call(this);\n          return subscription;\n        };\n\n        Subscriptions.prototype.findAll = function(identifier) {\n          var i, len, ref, results, s;\n          ref = this.subscriptions;\n          results = [];\n          for (i = 0, len = ref.length; i < len; i++) {\n            s = ref[i];\n            if (s.identifier === identifier) {\n              results.push(s);\n            }\n          }\n          return results;\n        };\n\n        Subscriptions.prototype.reload = function() {\n          var i, len, ref, results, subscription;\n          ref = this.subscriptions;\n          results = [];\n          for (i = 0, len = ref.length; i < len; i++) {\n            subscription = ref[i];\n            results.push(this.sendCommand(subscription, \"subscribe\"));\n          }\n          return results;\n        };\n\n        Subscriptions.prototype.notifyAll = function() {\n          var args, callbackName, i, len, ref, results, subscription;\n          callbackName = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n          ref = this.subscriptions;\n          results = [];\n          for (i = 0, len = ref.length; i < len; i++) {\n            subscription = ref[i];\n            results.push(this.notify.apply(this, [subscription, callbackName].concat(slice.call(args))));\n          }\n          return results;\n        };\n\n        Subscriptions.prototype.notify = function() {\n          var args, callbackName, i, len, results, subscription, subscriptions;\n          subscription = arguments[0], callbackName = arguments[1], args = 3 <= arguments.length ? slice.call(arguments, 2) : [];\n          if (typeof subscription === \"string\") {\n            subscriptions = this.findAll(subscription);\n          } else {\n            subscriptions = [subscription];\n          }\n          results = [];\n          for (i = 0, len = subscriptions.length; i < len; i++) {\n            subscription = subscriptions[i];\n            results.push(typeof subscription[callbackName] === \"function\" ? subscription[callbackName].apply(subscription, args) : void 0);\n          }\n          return results;\n        };\n\n        Subscriptions.prototype.sendCommand = function(subscription, command) {\n          var identifier;\n          identifier = subscription.identifier;\n          return this.consumer.send({\n            command: command,\n            identifier: identifier\n          });\n        };\n\n        return Subscriptions;\n\n      })();\n\n    }).call(this);\n    (function() {\n      ActionCable.Subscription = (function() {\n        var extend;\n\n        function Subscription(consumer, params, mixin) {\n          this.consumer = consumer;\n          if (params == null) {\n            params = {};\n          }\n          this.identifier = JSON.stringify(params);\n          extend(this, mixin);\n        }\n\n        Subscription.prototype.perform = function(action, data) {\n          if (data == null) {\n            data = {};\n          }\n          data.action = action;\n          return this.send(data);\n        };\n\n        Subscription.prototype.send = function(data) {\n          return this.consumer.send({\n            command: \"message\",\n            identifier: this.identifier,\n            data: JSON.stringify(data)\n          });\n        };\n\n        Subscription.prototype.unsubscribe = function() {\n          return this.consumer.subscriptions.remove(this);\n        };\n\n        extend = function(object, properties) {\n          var key, value;\n          if (properties != null) {\n            for (key in properties) {\n              value = properties[key];\n              object[key] = value;\n            }\n          }\n          return object;\n        };\n\n        return Subscription;\n\n      })();\n\n    }).call(this);\n    (function() {\n      ActionCable.Consumer = (function() {\n        function Consumer(url) {\n          this.url = url;\n          this.subscriptions = new ActionCable.Subscriptions(this);\n          this.connection = new ActionCable.Connection(this);\n        }\n\n        Consumer.prototype.send = function(data) {\n          return this.connection.send(data);\n        };\n\n        Consumer.prototype.connect = function() {\n          return this.connection.open();\n        };\n\n        Consumer.prototype.disconnect = function() {\n          return this.connection.close({\n            allowReconnect: false\n          });\n        };\n\n        Consumer.prototype.ensureActiveConnection = function() {\n          if (!this.connection.isActive()) {\n            return this.connection.open();\n          }\n        };\n\n        return Consumer;\n\n      })();\n\n    }).call(this);\n  }).call(this);\n\n  if (typeof module === \"object\" && module.exports) {\n    module.exports = ActionCable;\n  } else if (typeof define === \"function\" && define.amd) {\n    define(ActionCable);\n  }\n}).call(this);\n","import { Observable } from 'rxjs';\nimport {\n  GraphQLRequestHandler,\n  GraphQLRequestOptions,\n  GraphQLResponseData,\n} from '../types';\nimport ActionCable from 'actioncable';\n\nexport class ActionCableRequestHandler implements GraphQLRequestHandler {\n  subscription?: any;\n  channel?: string;\n  handle(request: GraphQLRequestOptions): Observable<GraphQLResponseData> {\n    return new Observable((subscriber) => {\n      const requestStartTimestamp = Date.now();\n      const cable = ActionCable.createConsumer(request.url);\n      this.subscription = cable.subscriptions.create(\n        {\n          channel:\n            typeof request.additionalParams?.channel === 'string'\n              ? request.additionalParams.channel\n              : 'GraphqlChannel',\n          channelId: Math.round(Date.now() + Math.random() * 100000).toString(16),\n        },\n        {\n          connected: function () {\n            this.perform('execute', request);\n          },\n          received: function (payload: any) {\n            if (payload.result.data || payload.result.errors) {\n              const requestEndTimestamp = Date.now();\n\n              subscriber.next({\n                ok: true,\n                data: JSON.stringify(payload.result),\n                headers: new Headers(),\n                status: 200,\n                statusText: 'OK',\n                url: request.url,\n                requestStartTimestamp,\n                requestEndTimestamp,\n                resopnseTimeMs: requestEndTimestamp - requestStartTimestamp,\n              });\n            }\n\n            if (!payload.more) {\n              subscriber.complete();\n            }\n          },\n        }\n      );\n\n      return () => {\n        this.destroy();\n      };\n    });\n  }\n  generateCurl(request: GraphQLRequestOptions): string {\n    throw new Error('Method not implemented.');\n  }\n  destroy(): void {\n    this.subscription?.unsubscribe();\n  }\n}\n"],"names":["__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","slice","this","ActionCable","INTERNAL","message_types","welcome","ping","confirmation","rejection","default_mount_path","protocols","WebSocket","window","logger","console","createConsumer","url","ref","getConfig","Consumer","createWebSocketURL","name","element","document","head","querySelector","getAttribute","a","test","createElement","href","protocol","replace","startDebugging","debugging","stopDebugging","log","messages","arguments","length","call","push","Date","now","apply","concat","ConnectionMonitor","clamp","secondsSince","connection","visibilityDidChange","fn","me","bind","reconnectAttempts","pollInterval","min","max","staleThreshold","prototype","start","isRunning","startedAt","stoppedAt","startPolling","addEventListener","getPollInterval","stop","stopPolling","removeEventListener","recordPing","pingedAt","recordConnect","disconnectedAt","recordDisconnect","poll","clearTimeout","pollTimeout","setTimeout","_this","reconnectIfStale","interval","constructor","Math","round","connectionIsStale","disconnectedRecently","reopen","visibilityState","isOpen","getTime","time","number","supportedProtocols","indexOf","item","i","l","Connection","consumer","open","subscriptions","monitor","disconnected","reopenDelay","send","data","webSocket","JSON","stringify","isActive","getState","uninstallEventHandlers","installEventHandlers","close","arg","ref1","allowReconnect","error1","error","getProtocol","isState","isProtocolSupported","states","state","readyState","toLowerCase","eventName","handler","events","message","event","identifier","type","parse","reload","notify","reject","notifyAll","willAttemptReconnect","Subscriptions","create","channelName","mixin","channel","subscription","Subscription","add","ensureActiveConnection","sendCommand","remove","forget","findAll","len","results","s","args","callbackName","command","extend","params","perform","action","unsubscribe","object","properties","key","connect","disconnect","module","exports","define","__webpack_require__","ActionCableRequestHandler","handle","request","Observable","subscriber","requestStartTimestamp","cable","additionalParams","channelId","random","toString","connected","received","payload","result","errors","requestEndTimestamp","next","ok","headers","Headers","status","statusText","resopnseTimeMs","more","complete","destroy","generateCurl","Error"],"mappings":"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","debug_id":"e01dc579-dab9-5dbd-b2f3-4f452d1ae460"}