#
# System Configuration
#
# System Id is required and need to be unique for each system.
#app.system-id=959a5b6d-5a33-4d10-94b7-6396ad60490e

# Default prefix used by all RESTs.
app.api-base-path=/api

# The prefix to be used by all database tables.
#app.database.table-prefix=

#
# Undertow Configuration
#
server.servlet.context-path=/
server.port=9090
server.undertow.worker-threads=2
server.undertow.accesslog.enabled=true

# https://kb.novaordis.com/index.php/Undertow_WildFly_Subsystem_Configuration_-_access-log#Pattern_Elements
server.undertow.accesslog.pattern=%h %l %u %t "%r" %s %b %{i,Referer}" "%{i,User-Agent}"
server.undertow.accesslog.dir=logs/httpd
server.undertow.accesslog.prefix=access.

# It's recommended to have (8 x worker-threads) for the I/O threads.
server.undertow.io-threads=16

# Enable response compression
server.compression.enabled=true

# Compress the response only if the response size is at least 1KB
server.compression.min-response-size=1024

# Enable HTTP/2 support, if the current environment supports it
server.http2.enabled=true

#
# CORS Support
#
# Set the HTTP methods to allow, e.g. GET, POST, etc. The special value '*' allows all methods.
spring.web.cors.allowed-methods=GET,POST,PUT,PATCH,DELETE

# Set the list of headers that a preflight request can list as allowed for use during an actual request.
# The special value '*', may be used to allow all headers. By default all headers are allowed.
spring.web.cors.allowed-headers=*

# The list of allowed origins that be specific origins, e.g. 'https://domain1.com', or '*' for all origins.
# By default, all origins are allowed.
spring.web.cors.allowed-origins=*

# Set the list of response headers other than 'simple', headers, i.e. Cache-Control, Content-Language,
# Content-Type, Expires, Last-Modified, or Pragma, that an actual response might have and can be exposed.
# Note that '*' is not supported on this property.
spring.web.cors.exposed-headers=Authorization

#
# Spring Actuator Support
#
# suppress inspection "SpringBootApplicationProperties"
management.endpoints.web.exposure.include=health,refresh

#
# Swagger Support
#
# It defines if Swagger will be enabled or not.
springfox.swagger.enabled=true

# Package that will be scanned to retrieve all endpoints to be exposed.
springfox.swagger.package-to-scan=

# Only the paths defined here will be exposed on Swagger UI.
springfox.swagger.paths-to-expose=/v.*,/public/v.*

#
# Datasource Support
#
spring.datasource.driver-class-name=org.hsqldb.jdbcDriver
spring.datasource.url=jdbc:hsqldb:mem:localdb
spring.datasource.username=sa
spring.datasource.password=

#
# Hikari Config
#
# https://github.com/brettwooldridge/HikariCP#configuration-knobs-baby
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=60000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.validation-timeout=30000

#
# JPA Support
#
# Enable JPA repositories.
spring.data.jpa.repositories.enabled=false

# Name of the target database to operate on, auto-detected by default.
# Can be alternatively set using the "Database" enum.
#spring.jpa.database=
spring.jpa.database-platform=io.herd.common.data.jpa.ImprovedHSQLDialect

# Initialize the schema on startup.
spring.jpa.generate-ddl=false

# DDL mode. This is actually a shortcut for the "hibernate.hbm2ddl.auto" property.
# Default to "create-drop" when using an embedded database, "none" otherwise.
spring.jpa.hibernate.ddl-auto=none

# Hibernate 5 implicit naming strategy fully qualified name.
spring.jpa.hibernate.naming.implicit-strategy=io.herd.common.data.jpa.DefaultImplicitNamingStrategy

# Hibernate 5 physical naming strategy fully qualified name.
spring.jpa.hibernate.naming.physical-strategy=io.herd.common.data.jpa.DefaultPhysicalNamingStrategy

# Hibernate 4 naming strategy fully qualified name. Not supported with Hibernate 5.
#spring.jpa.hibernate.naming.strategy=

# Use Hibernate's newer IdentifierGenerator for AUTO, TABLE and SEQUENCE.
#spring.jpa.hibernate.use-new-id-generator-mappings=

# Register OpenEntityManagerInViewInterceptor. Binds a JPA EntityManager to the thread for the entire processing of the request.
spring.jpa.open-in-view=true

# Additional native properties to set on the JPA provider.
spring.jpa.properties.hibernate.format_sql=true

# Enable logging of SQL statements.
spring.jpa.show-sql=true

#
# Liquibase Support
#
# Change log configuration path.
spring.liquibase.change-log=classpath:/db/liquibase-changelog.yaml

# Comma-separated list of runtime contexts to use.
#spring.liquibase.contexts=

# Name of table to use for tracking concurrent Liquibase usage.
spring.liquibase.database-change-log-lock-table=liq_db_changelog_lock

# Name of table to use for tracking change history.
spring.liquibase.database-change-log-table=liq_db_changelog

# Default database schema.
#spring.liquibase.default-schema=

# Drop the database schema first.
spring.liquibase.drop-first=false

# Enable liquibase support.
spring.liquibase.enabled=false

# Comma-separated list of runtime labels to use.
#spring.liquibase.labels=

# Change log parameters.
#spring.liquibase.parameters.*=

# Login password of the database to migrate.
#spring.liquibase.password=

# File to which rollback SQL will be written when an update is performed.
#spring.liquibase.rollback-file=

# JDBC url of the database to migrate. If not set, the primary configured data source is used.
#spring.liquibase.url=

# Login user of the database to migrate.
#spring.liquibase.user=
