#
# Copyright (c) 2025 - Felipe Desiderati
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
# associated documentation files (the "Software"), to deal in the Software without restriction,
# including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all copies or substantial
# portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
# LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#

#
# JMS Support
#
# Connection factory JNDI name. When set, takes precedence to other connection factory auto-configurations.
#spring.jms.jndi-name=

# Acknowledge-Mode of the container. By default, the listener is transacted with automatic acknowledgment.
spring.jms.listener.session.acknowledge-mode=auto

# Start the container automatically on startup.
spring.jms.listener.auto-startup=true

# Minimum number of concurrent consumers.
spring.jms.listener.min-concurrency=1

# Maximum number of concurrent consumers.
spring.jms.listener.max-concurrency=10

# Specify if the default destination type is a topic.
spring.jms.pub-sub-domain=false

# Default destination to use on send/receive operations that do not have a destination parameter.
spring.jms.template.default-destination=${jms.default-queue.name}

# Delivery delay to use for send calls in milliseconds.
#spring.jms.template.delivery-delay=

# Delivery mode. Enable QoS when set.
spring.jms.template.delivery-mode=persistent

# Priority of a message when sending. Enable QoS when set.
spring.jms.template.priority=0

# Enable explicit QoS when sending a message.
spring.jms.template.qos-enabled=true

# Timeout to use for receive calls in milliseconds.
# When it's being invoked with a timeout of 0, receive method blocks until a message arrives.
# To only check if a message is immediately available without blocking use any negative value.
spring.jms.template.receive-timeout=1s

# Time-to-lives of a message when sending in milliseconds. Enable QoS when set.
# If there isn't any worker available until the timeout expires, the message will be discarded!
spring.jms.template.time-to-live=5m

#
# ActiveMQ Artemis Support
#
# URL of the ActiveMQ broker.
spring.artemis.broker-url=tcp://localhost:61616

# Login user of the broker.
spring.artemis.user=artemis

# Login password of the broker.
spring.artemis.password=artemis

# Block when a connection is requested and the pool is full.
# Set it false, to throw a "JMSException" instead.
spring.artemis.pool.block-if-full=true

# Blocking period, in milliseconds, before throwing an exception if the pool is still full.
spring.artemis.pool.block-if-full-timeout=-1s

# Whether a PooledConnectionFactory should be created instead of a regular ConnectionFactory.
spring.artemis.pool.enabled=false

# Connection idle timeout in milliseconds.
spring.artemis.pool.idle-timeout=30s

# Maximum number of pooled connections.
spring.artemis.pool.max-connections=1

# Maximum number of active sessions per connection.
spring.artemis.pool.max-sessions-per-connection=500

# Time to sleep, in milliseconds, between runs of the idle connection eviction thread.
# When negative, no idle connection eviction thread runs.
spring.artemis.pool.time-between-expiration-check=-1s

# Use only one anonymous "MessageProducer" instance.
# Set it false to create one "MessageProducer" every time one is required.
spring.artemis.pool.use-anonymous-producers=true
