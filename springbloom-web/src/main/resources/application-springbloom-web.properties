#
# System Configuration
#
# Default prefix used by all RESTs.
app.api-base-path=/api

#
# Undertow Configuration
#
server.servlet.context-path=/
server.port=9090
server.undertow.threads.io=16
server.undertow.accesslog.enabled=true

# https://kb.novaordis.com/index.php/Undertow_WildFly_Subsystem_Configuration_-_access-log#Pattern_Elements
server.undertow.accesslog.pattern=%h %l %u %t "%r" %s %b %{i,Referer}" "%{i,User-Agent}"
server.undertow.accesslog.dir=logs/httpd
server.undertow.accesslog.prefix=access.

# It's recommended to have 8 times the number of I/O threads.
server.undertow.threads.worker=128

# Enable response compression.
server.compression.enabled=true

# Compress the response only if the response size is at least 1KB.
server.compression.min-response-size=1024

# Enable HTTP/2 support if the current environment supports it.
server.http2.enabled=true

#
# Exception Handling Support
#
# Exceptions list which should be recorded in the log as a warning.
spring.web.exception-handler.should-log-as-warning=dev.springbloom.core.exception.ResourceNotFoundApplicationException,\
  dev.springbloom.web.rest.exception.NotFoundRestApiException

#
# CORS Support Configuration For RESTful API
#
# Set the HTTP methods to allow, e.g., GET, POST, etc. The special value '*' allows all methods.
spring.web.cors.allowed-methods=GET,POST,PUT,PATCH,DELETE

# Set the list of headers that a preflight request can list as allowed for use during an actual request.
# The special value '*' may be used to allow all headers. By default, all headers are allowed.
spring.web.cors.allowed-headers=*

# The list of allowed origins that be specific origins, e.g. 'https://domain1.com', or '*' for all origins.
# By default, all origins are allowed.
spring.web.cors.allowed-origins=*

# Set the list of response headers other than 'simple', headers, i.e., Cache-Control, Content-Language,
# Content-Type, Expires, Last-Modified, or Pragma, that an actual response might have and can be exposed.
# Note that '*' is not supported on this property.
spring.web.cors.exposed-headers=Authorization

#
# Spring Actuator Support
#
# suppress inspection "SpringBootApplicationProperties"
management.endpoints.web.exposure.include=health,refresh

#
# Open API (formally Swagger API) Support
#
# It defines if Open API (formally Swagger API) is enabled or not.
springdoc.enabled=true

# Package that will be scanned to retrieve all endpoints to be exposed.
springdoc.package-to-scan=

# Only the paths defined here will be exposed on Swagger UI.
springdoc.paths-to-expose=/v.*,/public/v.*

#
# Async Support
#
# It defines how to propagate the request and locale context to asynchronous children threads.
spring.mvc.async.context-propagation-mode=NON_INHERITABLE

# Amount of time before asynchronous request handling times out. If this value is not set, the default timeout
# of the underlying implementation is used.
spring.mvc.async.request-timeout=30000

#
# GraphQL Support
#
# Default GraphQL servlet mapping.
spring.graphql.path=/graphql

# Set the HTTP methods to allow, e.g., GET, POST, etc. The special value '*' allows all methods.
spring.graphql.cors.allowed-methods=GET, HEAD, POST

# Set the list of headers that a preflight request can list as allowed for use during an actual request.
# The special value '*' may be used to allow all headers. By default, all headers are allowed.
spring.graphql.cors.allowed-headers=*

# The list of allowed origins that be specific origins, e.g. 'https://domain1.com', or '*' for all origins.
# By default, all origins are allowed.
spring.graphql.cors.allowed-origins=*

# Set the list of response headers other than 'simple', headers, i.e., Cache-Control, Content-Language,
# Content-Type, Expires, Last-Modified, or Pragma, that an actual response might have and can be exposed.
# Note that '*' is not supported on this property.
spring.graphql.cors.exposed-headers=Authorization

#
# RESTful API Client Support
#
# It defines if a default client is created to access another service via RESTful API.
spring.web.http.clients.enabled=false

# If HTTP Clients enabled, you must specify the RESTful API base path that will be accessed.
#spring.web.http.clients.base-path=
