{"version":3,"file":"616.js","sources":["../altair-core/src/authorization/providers/basic.ts"],"sourceRoot":"webpack:///","sourcesContent":["import { AuthorizationResult } from '../../types/state/authorization.interface';\nimport {\n  AuthorizationProvider,\n  AuthorizationProviderExecuteOptions,\n} from '../authorization-provider';\n\nexport interface BasicAuthorizationProviderInput {\n  type: 'basic';\n  data: {\n    username: string;\n    password: string;\n  };\n}\nexport default class BasicAuthorizationProvider extends AuthorizationProvider<BasicAuthorizationProviderInput> {\n  async execute(\n    options: AuthorizationProviderExecuteOptions<BasicAuthorizationProviderInput>\n  ): Promise<AuthorizationResult> {\n    if (!options.data?.username || !options.data?.password) {\n      return {\n        headers: {},\n      };\n    }\n    return {\n      headers: {\n        Authorization: `Basic ${(await import('abab')).btoa(\n          `${this.hydrate(options.data.username)}:${this.hydrate(options.data.password)}`\n        )}`,\n      },\n    };\n  }\n}\n"],"names":["BasicAuthorizationProvider","AuthorizationProvider","execute","options","_this","this","_asyncToGenerator","data","username","password","headers","Authorization","__webpack_require__","e","then","t","bind","btoa","hydrate"],"mappings":";;2IAac,MAAOA,UAAmCC,IAChDC,QACJC,GAA6E,IAAAC,EAAAC,KAAA,SAAAC,KAAA,YAE7E,OAAKH,EAAQI,MAAMC,UAAaL,EAAQI,MAAME,SAKvC,CACLC,QAAS,CACPC,cAAe,gBAAgBC,EAAAC,EAAA,KAAAC,KAAAF,EAAAG,EAAAC,KAAAJ,EAAA,YAAgBK,KAC7C,GAAGb,EAAKc,QAAQf,EAAQI,KAAKC,aAAaJ,EAAKc,QAAQf,EAAQI,KAAKE,iBAPjE,CACLC,QAAS,GASX,EAb2E,EAc/E","debug_id":"6a05a08c-e5aa-5e36-979c-b862ab607b87"}