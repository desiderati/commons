{"version":3,"file":"764.js","sources":["../node_modules/.pnpm/curlup@1.0.0/node_modules/curlup/index.js"],"sourceRoot":"webpack:///","sourcesContent":["\nconst LITERAL_NAMES = {\n    CURL: 'curl',\n    INCLUDE_HEADERS: 'include-headers',\n    SILENT: 'run-silent',\n    USE_GET: 'use-get',\n    COMPRESSED: 'compressed',\n    STATES: {\n        HEADER: 'header-state',\n        CUSTOM_METHOD: 'custom-method-state',\n        DATA: 'data-state',\n        USER: 'user-state',\n    },\n    STRING: 'string',\n    OTHERS: 'others',\n};\n\nconst literals = [\n    {\n        regex: /^\\bcurl\\b/,\n        name: LITERAL_NAMES.CURL\n    },\n    {\n        regex: /^(-H|--header)/,\n        name: LITERAL_NAMES.STATES.HEADER\n    },\n    {\n        regex: /^-X/,\n        name: LITERAL_NAMES.STATES.CUSTOM_METHOD\n    },\n    {\n        regex: /^(-u|--user)/,\n        name: LITERAL_NAMES.STATES.USER\n    },\n    {\n        regex: /^(-d|--data)/,\n        name: LITERAL_NAMES.STATES.DATA\n    },\n    {\n        regex: /^--compressed/,\n        name: LITERAL_NAMES.COMPRESSED\n    },\n    {\n        regex: /^(-i|--include)/,\n        name: LITERAL_NAMES.INCLUDE_HEADERS\n    },\n    {\n        regex: /^(-s|--silent)/,\n        name: LITERAL_NAMES.SILENT\n    },\n    {\n        regex: /^(-G|--get)/,\n        name: LITERAL_NAMES.USE_GET\n    },\n    {\n        regex: /^'[^']*'/,\n        name: LITERAL_NAMES.STRING\n    },\n    {\n        regex: /^\"[^\"]*\"/,\n        name: LITERAL_NAMES.STRING\n    },\n    {\n        regex: /^[^\\n\\r\\s]*/,\n        name: LITERAL_NAMES.STRING\n    },\n    {\n        regex: /^.*/,\n        name: LITERAL_NAMES.OTHERS\n    },\n];\n\n\nconst trimValue = val => val.trim().replace(/^('|\")\\s*/, '').replace(/\\s*('|\")$/, '');\nconst isURL = val => /((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[\\-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9\\.\\-]+|(?:www\\.|[\\-;:&=\\+\\$,\\w]+@)[A-Za-z0-9\\.\\-]+)((?:\\/[\\+~%\\/\\.\\w\\-_]*)?\\??(?:[\\-\\+=&;%@\\.\\w_]*)#?(?:[\\.\\!\\/\\\\\\w]*))?)/.test(val);\n\nconst parseCurl = curlCmd => {\n    let cmd = curlCmd.trim();\n    const tokens = [];\n    const result = {\n        url: '',\n        method: 'GET',\n        headers: {},\n        auth: {}\n    };\n    while (cmd) {\n        literals.some(literal => {\n            if (literal.regex.test(cmd)) {\n                tokens.push({\n                    name: literal.name,\n                    value: cmd.match(literal.regex)\n                });\n    \n                cmd = cmd.replace(literal.regex, '').trim();\n                return true;\n            }\n        });\n    }\n\n    // console.log(JSON.stringify(tokens, null, 2));\n    if (tokens.length) {\n        if (tokens.shift().name !== 'curl') {\n            throw new Error('Not a curl command.');\n        }\n\n        let state = '';\n        tokens.forEach(token => {\n            if (!state) {\n                switch(token.name) {\n                    case LITERAL_NAMES.STATES.HEADER:\n                        state = LITERAL_NAMES.STATES.HEADER;\n                        break;\n                    case LITERAL_NAMES.STATES.DATA:\n                        state = LITERAL_NAMES.STATES.DATA;\n                        break;\n                    case LITERAL_NAMES.STATES.CUSTOM_METHOD:\n                        state = LITERAL_NAMES.STATES.CUSTOM_METHOD;\n                        break;\n                    case LITERAL_NAMES.STATES.USER:\n                        state = LITERAL_NAMES.STATES.USER;\n                        break;\n                    case LITERAL_NAMES.STRING: {\n                        const val = trimValue(token.value[0]);\n                        if (isURL(val)) {\n                            result.url = val;\n                        }\n                        break;\n                    }\n                }\n            } else {\n                switch(state) {\n                    case LITERAL_NAMES.STATES.HEADER: {\n                        const pair = trimValue(token.value[0]).split(/\\s*:\\s*/);\n                        result.headers[pair[0]] = pair[1];\n                        break;\n                    }\n                    case LITERAL_NAMES.STATES.DATA: {\n                        const pair = token.value[0];\n                        result.data = trimValue(token.value[0]).trim();\n                        break;\n                    }\n                    case LITERAL_NAMES.STATES.CUSTOM_METHOD: {\n                        const pair = token.value[0];\n                        result.method = trimValue(token.value[0]).trim();\n                        break;\n                    }\n                }\n                state = '';\n            }\n        });\n    }\n\n    return result;\n};\n\nmodule.exports = {\n    parseCurl\n};\n"],"names":["LITERAL_NAMES","literals","regex","name","trimValue","val","trim","replace","module","exports","parseCurl","curlCmd","cmd","tokens","result","url","method","headers","auth","some","literal","test","push","value","match","length","shift","Error","state","forEach","token","pair","split","data","isURL"],"mappings":";;6EACA,MAAMA,gBAOU,eAPVA,uBAQiB,sBARjBA,cASQ,aATRA,cAUQ,aAMRC,EAAW,CACb,CACIC,MAAO,YACPC,KAlBE,QAoBN,CACID,MAAO,iBACPC,KAAMH,iBAEV,CACIE,MAAO,MACPC,KAAMH,wBAEV,CACIE,MAAO,eACPC,KAAMH,eAEV,CACIE,MAAO,eACPC,KAAMH,eAEV,CACIE,MAAO,gBACPC,KAlCQ,cAoCZ,CACID,MAAO,kBACPC,KAzCa,mBA2CjB,CACID,MAAO,iBACPC,KA5CI,cA8CR,CACID,MAAO,cACPC,KA/CK,WAiDT,CACID,MAAO,WACPC,KA3CI,UA6CR,CACID,MAAO,WACPC,KA/CI,UAiDR,CACID,MAAO,cACPC,KAnDI,UAqDR,CACID,MAAO,MACPC,KAtDI,WA2DNC,EAAYC,GAAOA,EAAIC,OAAOC,QAAQ,YAAa,IAAIA,QAAQ,YAAa,IAkFlFC,EAAOC,QAAU,CACbC,UAhFcC,IACd,IAAIC,EAAMD,EAAQL,OAClB,MAAMO,EAAS,GACTC,EAAS,CACXC,IAAK,GACLC,OAAQ,MACRC,QAAS,CAAC,EACVC,KAAM,CAAC,GAEX,KAAON,GACHX,EAASkB,KAAKC,IACV,GAAIA,EAAQlB,MAAMmB,KAAKT,GACnBC,SAAOS,KAAK,CACRnB,KAAMiB,EAAQjB,KACdoB,MAAOX,EAAIY,MAAMJ,EAAQlB,SAG7BU,EAAMA,EAAIL,QAAQa,EAAQlB,MAAO,IAAII,QAC9B,IAMnB,GAAIO,EAAOY,OAAQ,CACf,GAA4B,SAAxBZ,EAAOa,QAAQvB,KACf,MAAM,IAAIwB,MAAM,uBAGpB,IAAIC,EAAQ,GACZf,EAAOgB,QAAQC,IACX,GAAKF,EAsBE,CACH,OAAOA,GACH,KAAK5B,gBAA6B,CAC9B,MAAM+B,EAAO3B,EAAU0B,EAAMP,MAAM,IAAIS,MAAM,WAC7ClB,EAAOG,QAAQc,EAAK,IAAMA,EAAK,GAC/B,KACJ,CACA,KAAK/B,cAEDc,EAAOmB,KAAO7B,EAAU0B,EAAMP,MAAM,IAAIjB,OACxC,MAEJ,KAAKN,uBAEDc,EAAOE,OAASZ,EAAU0B,EAAMP,MAAM,IAAIjB,OAIlDsB,EAAQ,EACZ,MAxCI,OAAOE,EAAM3B,MACT,KAAKH,gBACD4B,EAAQ5B,gBACR,MACJ,KAAKA,cACD4B,EAAQ5B,cACR,MACJ,KAAKA,uBACD4B,EAAQ5B,uBACR,MACJ,KAAKA,cACD4B,EAAQ5B,cACR,MACJ,IA5GR,SA4GmC,CACvB,MAAMK,EAAMD,EAAU0B,EAAMP,MAAM,IAhD5ClB,IAAO,uLAAuLgB,KAAKhB,GAiDrL6B,CAAM7B,KACNS,EAAOC,IAAMV,GAEjB,KACJ,EACJ,EAsBZ,CAEA,OAAOS","debug_id":"4c431f4a-3f6e-5e91-86d8-cfed250ab3aa"}